package colegio.vistas;

import colegio.modelo.Materia;
import java.util.HashSet;
import javax.swing.JOptionPane;

/**
 * @author Grupo 6
 * Fernandez Valentina
 * Romero Jorge
 * Gutierrez Manuel
 */
public class FormularioMateria extends javax.swing.JInternalFrame {
    private HashSet<Materia> todasLasMaterias;
    private boolean idOk = false;
    private boolean nombreOk = false;
    private boolean anioOk = false;
    /**
     * Creates new form FormularioMateria
     * @param todasLasMaterias es el conjunto donde estan todas las materias del colegio
     */
    public FormularioMateria(HashSet<Materia> todasLasMaterias) {
        initComponents();
        limpiarCampos();
        this.todasLasMaterias = todasLasMaterias;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtId = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jtAnio = new javax.swing.JTextField();
        jbGuardar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setText("Formulario de Materias");

        jLabel2.setText("ID");

        jLabel3.setText("Nombre");

        jLabel4.setText("Año");

        jtId.setText("jTextField1");
        jtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtIdFocusLost(evt);
            }
        });

        jtNombre.setText("jTextField2");
        jtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNombreFocusLost(evt);
            }
        });

        jtAnio.setText("jTextField3");
        jtAnio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtAnioFocusLost(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbGuardar)
                        .addGap(33, 33, 33)
                        .addComponent(jbNuevo)
                        .addGap(31, 31, 31)
                        .addComponent(jbSalir))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar)
                    .addComponent(jbNuevo)
                    .addComponent(jbSalir))
                .addGap(0, 41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarCampos(){
        jtId.setText("");
        jtNombre.setText("");
        jtAnio.setText("");
    }
    
    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtIdFocusLost
        try{
            if(!jtId.getText().isEmpty()){
                int id = Integer.parseInt(jtId.getText());
                idOk = true;
            }
        }catch (NumberFormatException nfe) {
            idOk = false;
            JOptionPane.showMessageDialog(this, "La ID Debe Ser un Número!");
            jtId.requestFocus();
        }
    }//GEN-LAST:event_jtIdFocusLost

    private void jtAnioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtAnioFocusLost
        try{
            if(!jtAnio.getText().isEmpty()){
                int anio = Integer.parseInt(jtAnio.getText());
                anioOk = true;
            }
        }catch (NumberFormatException nfe) {
            anioOk = false;
            JOptionPane.showMessageDialog(this, "El Año Debe Ser un Número!");
            jtAnio.requestFocus();
        }
    }//GEN-LAST:event_jtAnioFocusLost

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        limpiarCampos();
        idOk = false;
        anioOk = false;
        nombreOk = false;
        jtId.requestFocus();
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if(revisarCamposVacios()){
            if(idOk && anioOk && nombreOk){
                Materia materia = new Materia();

                materia.setId(Integer.parseInt(jtId.getText()));
                materia.setNombre(jtNombre.getText());
                materia.setAnio(Integer.parseInt(jtAnio.getText()));

                if(todasLasMaterias.add(materia)){
                    limpiarCampos();
                    jtId.requestFocus();
                    JOptionPane.showMessageDialog(this, "Materia Guardada con Éxito!");
                }else{
                    JOptionPane.showMessageDialog(this, "Esta Materia ya Está Guardada!");
                }
            }else{
                JOptionPane.showMessageDialog(this, "Hay Campos Incorrectos!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Hay Campos Vacíos!");
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNombreFocusLost
        if(validarTexto(jtNombre.getText())){
            nombreOk = true;
        }else{
            nombreOk = false;
            JOptionPane.showMessageDialog(this, "Nombre Incorrecto!");
            jtNombre.requestFocus();
        }
    }//GEN-LAST:event_jtNombreFocusLost

    /**
     * Comprueba si un Nombre es Correcto
     * @param texto es el String del Campo que se va a Validar
     * @return true si es un Texto Correcto, false si no lo es
     */
    private boolean validarTexto(String texto){
        boolean bandera = true;
        int i = 0;
        while(bandera && i < texto.length()){
            char c = texto.charAt(i);
            if(!Character.isLetter(c) && !Character.isSpaceChar(c)){
                bandera = false;
            }
            i++;
        }
        return bandera;
    }
    
    /**
     * @return true Si No Hay Campos Vacios
     */
    private boolean revisarCamposVacios(){
        String legajo = jtId.getText();
        String apellido = jtAnio.getText();
        String nombre = jtNombre.getText();
        
        return (!legajo.isEmpty() && !apellido.isEmpty() && !nombre.isEmpty());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JTextField jtAnio;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
}
