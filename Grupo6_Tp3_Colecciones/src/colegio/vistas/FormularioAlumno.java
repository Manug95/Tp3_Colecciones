package colegio.vistas;

import colegio.modelo.Alumno;
import java.util.HashSet;
import javax.swing.JOptionPane;

/**
 * @author Grupo 6
 * Fernandez Valentina
 * Romero Jorge
 * Gutierrez Manuel
 */
public class FormularioAlumno extends javax.swing.JInternalFrame {
    private HashSet<Alumno> todosLosAlumnos ;
    private boolean todoOk = false;
    /**
     * Creates new form FormularioAlumno
     * @param todosLosAlumnos es el conjunto donde estan todos los alumnos registrados
     */
    public FormularioAlumno(HashSet<Alumno> todosLosAlumnos) {
        initComponents();
        limpiarCampos();
        this.todosLosAlumnos = todosLosAlumnos;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtLegajo = new javax.swing.JTextField();
        jtApellido = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jbGuardar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Formulario de Alumno");

        jLabel2.setText("Legajo: ");

        jLabel3.setText("Apellido: ");

        jLabel4.setText("Nombre: ");

        jtLegajo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtLegajoFocusLost(evt);
            }
        });

        jtApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtApellidoFocusLost(evt);
            }
        });

        jtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNombreFocusLost(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtNombre))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jbGuardar)
                        .addGap(43, 43, 43)
                        .addComponent(jbNuevo)
                        .addGap(55, 55, 55)
                        .addComponent(jbSalir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar)
                    .addComponent(jbNuevo)
                    .addComponent(jbSalir))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtLegajoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtLegajoFocusLost
        try{
            if(jtLegajo.getText().length() != 0){
                int legajo = Integer.parseInt(jtLegajo.getText());
                todoOk = true;
            }
        }catch(NumberFormatException nfe) {
            todoOk = false;
            JOptionPane.showMessageDialog(this, "El Legajo Debe Ser un Numero!");
            jtLegajo.requestFocus();
        }
    }//GEN-LAST:event_jtLegajoFocusLost

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        limpiarCampos();
        todoOk = false;
        jtLegajo.requestFocus();
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if(revisarCamposVacios()){//primero revisa si no hay campos vacios
            if(todoOk){//si no hay campos llenados incorrectamente, guarda el alumno
                Alumno alumno = new Alumno();

                alumno.setLegajo(Integer.parseInt(jtLegajo.getText()));
                alumno.setApellido(jtApellido.getText());
                alumno.setNombre(jtNombre.getText());

                if(todosLosAlumnos.add(alumno)){
                    limpiarCampos();
                    todoOk = false;
                    JOptionPane.showMessageDialog(this, "Alumno Guardado con Éxito!");
                    jtLegajo.requestFocus();
                }else{
                    todoOk = false;
                    JOptionPane.showMessageDialog(this, "Este Alumno Ya Está Guardado!");
                }
            }else{
                JOptionPane.showMessageDialog(this, "Hay Campos Incorrectos!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Hay Campos Vacios!");
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtApellidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtApellidoFocusLost
        if(validarTexto(jtApellido.getText())){
            todoOk = true;
        }else{
            todoOk = false;
            JOptionPane.showMessageDialog(this, "Apellido Incorrecto!");
            jtApellido.requestFocus();
        }
    }//GEN-LAST:event_jtApellidoFocusLost

    private void jtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNombreFocusLost
        if(validarTexto(jtNombre.getText())){
            todoOk = true;
        }else{
            todoOk = false;
            JOptionPane.showMessageDialog(this, "Nombre Incorrecto!");
            jtNombre.requestFocus();
        }
    }//GEN-LAST:event_jtNombreFocusLost

    /**
     * Comprueba si un Nombre o Apellido es Correcto
     * @param texto es el String del Campo que se va a Validar
     * @return true si es un Texto Correcto, false si no lo es
     */
    private boolean validarTexto(String texto){
        boolean bandera = true;
        int i = 0;
        while(bandera && i < texto.length()){
            char c = texto.charAt(i);
            if(!Character.isLetter(c) && !Character.isSpaceChar(c)){
                bandera = false;
            }
            i++;
        }
        return bandera;
    }
    
    /**
     * @return true Si No Hay Campos Vacios
     */
    private boolean revisarCamposVacios(){
        String legajo = jtLegajo.getText();
        String apellido = jtApellido.getText();
        String nombre = jtNombre.getText();
        
        return (!legajo.isEmpty() && !apellido.isEmpty() && !nombre.isEmpty());
    }

    /**
     * Pone en "Blanco" Todos los Campos
     */
    private void limpiarCampos(){
        jtLegajo.setText("");
        jtApellido.setText("");
        jtNombre.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtLegajo;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables
}
